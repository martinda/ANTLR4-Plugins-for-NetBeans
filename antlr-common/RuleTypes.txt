// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   RuleTypes.java

package org.nemesis.antlr.common.extractiontypes;

import java.util.function.Supplier;

public final class RuleTypes extends Enum
    implements Supplier
{

    public static RuleTypes[] values()
    {
        return (RuleTypes[])$VALUES.clone();
    }

    public static RuleTypes valueOf(String name)
    {
        return (RuleTypes)Enum.valueOf(org/nemesis/antlr/common/extractiontypes/RuleTypes, name);
    }

    private RuleTypes(String s, int i)
    {
        super(s, i);
    }

    public String toString()
    {
        return name().toLowerCase();
    }

    public boolean isTopLevelRuleType()
    {
        return this != NAMED_ALTERNATIVES;
    }

    public String get()
    {
        static class _cls1
        {

            static final int $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes[];

            static 
            {
                $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes = new int[RuleTypes.values().length];
                try
                {
                    $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes[RuleTypes.FRAGMENT.ordinal()] = 1;
                }
                catch(NoSuchFieldError nosuchfielderror) { }
                try
                {
                    $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes[RuleTypes.LEXER.ordinal()] = 2;
                }
                catch(NoSuchFieldError nosuchfielderror1) { }
                try
                {
                    $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes[RuleTypes.PARSER.ordinal()] = 3;
                }
                catch(NoSuchFieldError nosuchfielderror2) { }
                try
                {
                    $SwitchMap$org$nemesis$antlr$common$extractiontypes$RuleTypes[RuleTypes.NAMED_ALTERNATIVES.ordinal()] = 4;
                }
                catch(NoSuchFieldError nosuchfielderror3) { }
            }
        }

        switch(_cls1..SwitchMap.org.nemesis.antlr.common.extractiontypes.RuleTypes[ordinal()])
        {
        case 1: // '\001'
            return "fragment-rule-name";

        case 2: // '\002'
            return "lexer-rule-name";

        case 3: // '\003'
            return "parser-rule-name";

        case 4: // '\004'
            return "alternatives";
        }
        return "default";
    }

    public volatile Object get()
    {
        return get();
    }

    public static final RuleTypes FRAGMENT;
    public static final RuleTypes LEXER;
    public static final RuleTypes PARSER;
    public static final RuleTypes NAMED_ALTERNATIVES;
    private static final RuleTypes $VALUES[];

    static 
    {
        FRAGMENT = new RuleTypes("FRAGMENT", 0);
        LEXER = new RuleTypes("LEXER", 1);
        PARSER = new RuleTypes("PARSER", 2);
        NAMED_ALTERNATIVES = new RuleTypes("NAMED_ALTERNATIVES", 3);
        $VALUES = (new RuleTypes[] {
            FRAGMENT, LEXER, PARSER, NAMED_ALTERNATIVES
        });
    }
}
