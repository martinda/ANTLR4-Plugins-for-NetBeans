!!! Font color entries not written to layer unless the annotation processor
is called multiple times (e.g. there is another highlighting entry on a
highlighter registration annotation on a key).


fix coalescer to support longs

split out functions package

split out annotation-utils and friends (class generation "java-vogon"?)

move Hashable to misc utils?

adhoc language highlighting should use DataRange / coalesce support

arrayutil sort methods should support Range, not IndexAddressableItem, and probably move to the range package
  - replace endSupplier with IntUnaryOperator?

move generally useful stuff out of here into mastfrog-util
 - bits
 - longarray
 - graph
 - range

consolidate various predicate code
 - is the ml media sniffer code a copy of BytePredicate stuff?

split out predicates

-------

Declarative registraton of resolvers, actual attribution phase

Use new carets api to do inplace rename refactoring

Supply an alternate reference key for region names, not just have types

Add arbitrary scoping using other elements.

Get the antlr module working

Maybe generic scoping - parser rule based what can reference what?

CODE COMPLETION:
 - Annotation + processor for registering it - OR ADD TO AntlrLanguageRegistration so it can access parser / lexer
    - Filter tokens optionally
    - Insertion policy (prepend/append space under what conditions)
 - Ability to flag a named region extraction key as providing completions after a list of tokens
    - Ability to intercept and filter based on scope
 - Generic extraction-based completion contributor

FORMATTING:

 - Rename AntlrFormatterProvider to AntlrFormatter and update in the annotation processor
 - REINDENT SUPPORT
 - Wrapping lines action is not getting the correct line position and going insane
 - Should preserve whitespace if no action taken
 - UI support and choosable formatting actions


ANNOTATION PROCESSORS:

 - Split AnnotationUtils and validators into separate project
 - Split java code generation into separate project
 - Split annotation processing into phases, so ALL validation for a processor runs before ANY code is generated
 - ClassBuilder and friends need an easy and intuitive way to do "new" rather than bundling it into the type name


ACTIONS:

 - Most likely just need to use shared action names now that they're in the editor kit
   - Well, that's a big fat NOPE.


CODE COMPLETION:
 - Use https://raw.githubusercontent.com/mike-lischke/antlr4-c3/master/ports/java/src/main/java/com/vmware/antlr4c3/CodeCompletionCore.java
 - 


