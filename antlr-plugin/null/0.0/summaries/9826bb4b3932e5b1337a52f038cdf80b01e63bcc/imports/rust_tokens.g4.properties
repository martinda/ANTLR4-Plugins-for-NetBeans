#This file contains a content summary of rust_tokens.g4
#Sun Jan 06 18:34:57 EST 2019
sourceFileName=Optional[/home/tim/work/foreign/rust-netbeans/src/main/antlr4/imports/rust_tokens.g4]
analyzer.super.class=
tokens.rule.id.offset.start=(As,52);(Auto,62);(Box,76);(Break,88);(Crate,104);(Const,120);(Continue,136);(Default,158);(Else,178);(Enum,192);(Extern,206);(False,224);(For,240);(Let,252);(Loop,264);(If,278);(Match,288);(Mod,304);(Move,316);(Pub,330);(Ref,342);(Return,354);(Semicolon,372);(Super,388);(Static,404);(Struct,422);(Self,440);(SelfCaps,454);(True,472);(Type,486);(Trait,500);(Impl,516);(Union,530);(Unsafe,546);(Use,564);(Where,576);(While,592);(I32,608);(I64,620);(F32,632);(F64,644);(Mut,656);(AttrPrefix,668);(AssignShiftLeft,687);(AssignShiftRight,711);(ByteLiteralPrefix,736);(ByteStringPrefix,762);(TripleDot,786);(InnerAttrPrefix,804);(Fn,829);(In,839);(HexLiteralPrefix,850);(OctalLiteralPrefix,874);(BitsLiteralPrefix,900);(BlockCommentPrefix,925);(LineCommentPrefix,951);(DoubleAmpersand,977);(DoubleColon,1000);(DoubleEquals,1019);(DoublePipe,1039);(DoubleBackslash,1057);(FatArrow,1082);(EqArrow,1098);(NotEquals,1113);(LessThanOrEquals,1130);(GreaterThanOrEquals,1154);(AssignMultiply,1182);(AssignDivide,1204);(AssignMod,1224);(AssignPlus,1241);(AssignMinus,1259);(AssignAnd,1278);(AssignXor,1295);(AssignOr,1312);(Newline,1330);(CarriageReturn,1345);(Ampersand,1368);(Quote,1384);(SingleQuote,1396);(Backslash,1415);(Bang,1432);(Colon,1443);(Comma,1455);(Dot,1467);(DotDot,1477);(LeftParen,1491);(RightParen,1507);(LeftBrace,1524);(RightBrace,1540);(LeftBracket,1557);(RightBracket,1575);(Equals,1594);(Percent,1607);(LeftAngleBracket,1621);(RightAngleBracket,1644);(Hash,1668);(Plus,1679);(Minus,1690);(Slash,1702);(Asterisk,1714);(Underscore,1729);(QuestionMark,1746);(AtSymbol,1765);(Pipe,1780);(Circumflex,1791);(Space,1808);(Ident,1821)
grammar.offset.end=18
grammars.imported.names=xidstart,xidcontinue
parser.rule.ids.offset.end=
modes.id=
grammars.imported.offset.end=(xidstart,35);(xidcontinue,48)
analyzer.token.class=
modes.start.offset=
fragments.rule.id.offset.start=(IDENT,1845)
grammar.type=combined
grammars.imported.offset.start=(xidstart,28);(xidcontinue,38)
grammar.offset.start=8
tokens.id=
tokens.imported.file.names=
tokens.imported.file.offset.start=
parser.rule.ids.offset.start=
grammar.name=rust_tokens
analyzer.imports.end.offset=
tokens.rule.id.OfModes=
analyzer.imports.start.offset=
analyzer.package=
analyzer.imports=
modes.end.offset=
tokens.imported.file.offset.end=
tokens.rule.id=As,Auto,Box,Break,Crate,Const,Continue,Default,Else,Enum,Extern,False,For,Let,Loop,If,Match,Mod,Move,Pub,Ref,Return,Semicolon,Super,Static,Struct,Self,SelfCaps,True,Type,Trait,Impl,Union,Unsafe,Use,Where,While,I32,I64,F32,F64,Mut,AttrPrefix,AssignShiftLeft,AssignShiftRight,ByteLiteralPrefix,ByteStringPrefix,TripleDot,InnerAttrPrefix,Fn,In,HexLiteralPrefix,OctalLiteralPrefix,BitsLiteralPrefix,BlockCommentPrefix,LineCommentPrefix,DoubleAmpersand,DoubleColon,DoubleEquals,DoublePipe,DoubleBackslash,FatArrow,EqArrow,NotEquals,LessThanOrEquals,GreaterThanOrEquals,AssignMultiply,AssignDivide,AssignMod,AssignPlus,AssignMinus,AssignAnd,AssignXor,AssignOr,Newline,CarriageReturn,Ampersand,Quote,SingleQuote,Backslash,Bang,Colon,Comma,Dot,DotDot,LeftParen,RightParen,LeftBrace,RightBrace,LeftBracket,RightBracket,Equals,Percent,LeftAngleBracket,RightAngleBracket,Hash,Plus,Minus,Slash,Asterisk,Underscore,QuestionMark,AtSymbol,Pipe,Circumflex,Space,Ident
tokens.rule.id.offset.end=(As,53);(Auto,65);(Box,78);(Break,92);(Crate,108);(Const,124);(Continue,143);(Default,164);(Else,181);(Enum,195);(Extern,211);(False,228);(For,242);(Let,254);(Loop,267);(If,279);(Match,292);(Mod,306);(Move,319);(Pub,332);(Ref,344);(Return,359);(Semicolon,380);(Super,392);(Static,409);(Struct,427);(Self,443);(SelfCaps,461);(True,475);(Type,489);(Trait,504);(Impl,519);(Union,534);(Unsafe,551);(Use,566);(Where,580);(While,596);(I32,610);(I64,622);(F32,634);(F64,646);(Mut,658);(AttrPrefix,677);(AssignShiftLeft,701);(AssignShiftRight,726);(ByteLiteralPrefix,752);(ByteStringPrefix,777);(TripleDot,794);(InnerAttrPrefix,818);(Fn,830);(In,840);(HexLiteralPrefix,865);(OctalLiteralPrefix,891);(BitsLiteralPrefix,916);(BlockCommentPrefix,942);(LineCommentPrefix,967);(DoubleAmpersand,991);(DoubleColon,1010);(DoubleEquals,1030);(DoublePipe,1048);(DoubleBackslash,1071);(FatArrow,1089);(EqArrow,1104);(NotEquals,1121);(LessThanOrEquals,1145);(GreaterThanOrEquals,1172);(AssignMultiply,1195);(AssignDivide,1215);(AssignMod,1232);(AssignPlus,1250);(AssignMinus,1269);(AssignAnd,1286);(AssignXor,1303);(AssignOr,1319);(Newline,1336);(CarriageReturn,1358);(Ampersand,1376);(Quote,1388);(SingleQuote,1406);(Backslash,1423);(Bang,1435);(Colon,1447);(Comma,1459);(Dot,1469);(DotDot,1482);(LeftParen,1499);(RightParen,1516);(LeftBrace,1532);(RightBrace,1549);(LeftBracket,1567);(RightBracket,1586);(Equals,1599);(Percent,1613);(LeftAngleBracket,1636);(RightAngleBracket,1660);(Hash,1671);(Plus,1682);(Minus,1694);(Slash,1706);(Asterisk,1721);(Underscore,1738);(QuestionMark,1757);(AtSymbol,1772);(Pipe,1783);(Circumflex,1800);(Space,1812);(Ident,1825)
parser.rule.ids=
fragments.ofMode=
fragments.rule.id=IDENT
channels=
channels.end.offset=
channels.start.offset=
fragments.rule.id.offset.end=(IDENT,1849)
tokens.offset=
